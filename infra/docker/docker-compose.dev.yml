version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: basedguide
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ../../apps/backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/basedguide
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      OPEN_EXCHANGE_API_KEY: ${OPEN_EXCHANGE_API_KEY}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../../apps/backend:/app
      - exchange_rates_data:/app/data
    command: uvicorn src.app:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ../../apps/frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ../../apps/frontend:/app
      - /app/node_modules
    command: pnpm dev

volumes:
  postgres_data:
  exchange_rates_data:
