name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: basedguide_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        working-directory: apps/backend
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: Run linting
        working-directory: apps/backend
        run: |
          ruff check src tests
          black --check src tests
          
      - name: Run type checking
        working-directory: apps/backend
        run: mypy src
        
      - name: Run tests
        working-directory: apps/backend
        run: pytest
        env:
          DATABASE_URL_TEST: postgresql://postgres:postgres@localhost:5432/basedguide_test

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install pnpm
        run: npm install -g pnpm
        
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run linting
        working-directory: apps/frontend
        run: pnpm lint
        
      - name: Run type checking
        working-directory: apps/frontend
        run: pnpm typecheck
        
      - name: Run tests
        working-directory: apps/frontend
        run: pnpm test
        
      - name: Build
        working-directory: apps/frontend
        run: pnpm build

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
